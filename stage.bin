CONF_BIN="[default]
title = Orbrium
tenant = orbrium
domain = $DEFAULT_DOMAIN
endpoint = $DEFAULT_ENDPOINT
origins = https://$DEFAULT_ENDPOINT

ui_router = client

database = pygma

version = 1
stage = $DEFAULT_STAGE
debug = $DEFAULT_DEBUG

system_access_key = $SYSTEM_ACCESS_KEY
system_secret_key = $SYSTEM_SECRET_KEY
admin_username = $DEFAULT_ADMIN_USERNAME
admin_password = $DEFAULT_ADMIN_PASSWORD
admin_group = Administrators
admin_role = admin
user_group = Users
user_role = user

health_check_interval = 5
health_check_timeout = 2
health_check_retries = 3

modules = ldap, postgresql, elasticsearch, redis, keycloak, minio, guacd, guacamole, core, account, router, tool, secret, cloud, acol, aprx, bint, nginx
proxies = core, account, router, tool, secret, cloud, acol, aprx, bint

[default:acl]
User = r
Group = r
info.Public = r
info.Restrict = crud
info.Private = crud
board.Announcement = r
board.Notification = r
board.GroupMemo = crud
board.UserMemo = crud
pubs.Party = crud
pubs.Member = ru
pubs.Content = crud
data.GroupBucket = crud
data.UserBucket = crud

org.Endpoint = r
org.Approval = ru
org.Request = r
region.Project = r
region.Deployment = r
region.Resource = r

[default:restrict]
users = {ini['default.admin_username']}, system
groups = admin, Admin, Administrators, user, Users, consoleAdmin, diagnostics, readonly, writeonly, readwrite

[default:smtp]
hostname = $SMTP_HOSTNAME
hostport = $SMTP_HOSTPORT
username = $SMTP_USERNAME
password = $SMTP_PASSWORD
tls = $SMTP_TLS
ssl = $SMTP_SSL


# CLOUD #########################################################################
[cloud]
hostname = cloud
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

wsa_admin_username = $WSA_ADMIN_USERNAME
wsa_admin_password = $WSA_ADMIN_PASSWORD
wsa_hostname = $WSA_HOSTNAME
wsa_directory_domain = $WSA_DIRECTORY_DOMAIN
wsa_client_id = $WSA_CLIENT_ID
wsa_client_secret = $WSA_CLIENT_SECRET
wsa_auto_client_prefix = prelude-user-

cloud_domain = $CLOUD_DOMAIN
admin_project = $ADMIN_PROJECT
prime_project = $PRIME_PROJECT
sync_interval = 600
sync_restart_interval = 60

[cloud:resource_types_and_restrict_actions]
Cloud.vSphere.Machine = Cloud.vSphere.Machine.Update.Tags, Cloud.vSphere.Machine.Reset, Cloud.vSphere.Machine.Rebuild, Cloud.vSphere.Machine.Unregister, Cloud.vSphere.Machine.ApplySaltConfiguration, Cloud.vSphere.Machine.AttachSaltStackResource, Cloud.vSphere.Machine.Remote.Console, Cloud.vSphere.Machine.Change.SecurityGroup
Cloud.NSX.Network =
Cloud.NSX.LoadBalancer =
Cloud.SecurityGroup =
Cloud.vSphere.Disk = Cloud.vSphere.Disk.Disk.Change.Display.Name, Cloud.vSphere.Disk.Update.Tags
Custom.Project =
Custom.VPC =
Custom.AIP =
Custom.Peering =
Custom.NFS =
Custom.DSMDB =
Custom.Kubernetes =

[cloud:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[cloud:mounts]
#[cloud:environment]
#[cloud:ports]
#[cloud:volumes]


# AUTOMATION COLLECTOR ##########################################################
[acol]
hostname = acol
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

# don't change workers count
workers = 1

[acol:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[acol:mounts]
#[acol:environment]
#[acol:ports]
#[acol:volumes]


# AUTOMATION PROXY ##############################################################
[aprx]
hostname = aprx
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

[aprx:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[aprx:mounts]
#[aprx:environment]
#[aprx:ports]
#[aprx:volumes]


# BUSINESS INTEGRATION ##########################################################
[bint]
hostname = bint
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 2

[bint:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[bint:mounts]
#[bint:environment]
#[bint:ports]
#[bint:volumes]


# SECRET ########################################################################
[secret]
hostname = secret
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

[secret:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[secret:mounts]
#[secret:environment]
#[secret:ports]
#[secret:volumes]


# DNS MANAGER ###################################################################
[dnsm]
hostname = dnsm
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 1

acc_endpoint = https://{ini['account.hostname']}:{ini['account.hostport']}
api_endpoint = https://{ini['tool.hostname']}:{ini['tool.hostport']}
#acc_endpoint = https://{ini['default.endpoint']}
#api_endpoint = https://{ini['default.endpoint']}

domain = {ini['cloud.cloud_domain']}
interval = 5

[dnsm:query]
#properties.property = value

[dnsm:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[dnsm:mounts]
#[dnsm:environment]
#[dnsm:ports]
#[dnsm:volumes]


# DNS CLIENT ####################################################################
[dnsc]
hostname = dnsc
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 1

dnsm_endpoint = https://{ini['dnsm.hostname']}:{ini['dnsm.hostport']}
#dnsm_endpoint = https://{ini['default.endpoint']}

domain = {ini['cloud.cloud_domain']}
interval = 5
file_tag = dnsc

[dnsc:build]
image = common:base
script =
	RUN mkdir -p /hosts.d
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[dnsc:mounts]
#[dnsc:environment]
#[dnsc:ports]
#[dnsc:volumes]


# TOOL ##########################################################################
[tool]
hostname = tool
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

[tool:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[tool:mounts]
#[tool:environment]
#[tool:ports]
#[tool:volumes]


# ROUTER ########################################################################
[router]
hostname = router
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

[router:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[router:mounts]
#[router:environment]
#[router:ports]
#[router:volumes]


# ACCOUNT #######################################################################
[account]
hostname = account
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

workers = 4

[account:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[account:mounts]
#[account:volumes]
#[account:environment]
#[account:ports]


# CORE ##########################################################################
[core]
hostname = core
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

# don't change workers count
workers = 1

clear_tick = 60
clear_model_hour = 2
clear_cache_hour = 2

[core:build]
image = common:base
script =
	ADD {section.replace(':build', '')} /opt/{section.replace(':build', '')}
	ADD webcert /opt/webcert
	ADD common /opt/common
	ADD driver /opt/driver
	ADD schema /opt/schema
	ADD config.ini /opt/config.ini
	CMD ["python", "{section.replace(':build', '')}"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:8080/internal/health || exit 1

#[core:mounts]
#[core:volumes]
#[core:environment]
#[core:ports]


# NGINX #########################################################################
[nginx]
hostname = nginx
hostaddr = 0.0.0.0
hostport = 443
healthcheck = true

[nginx:build]
image = nginx:base
script =
	ADD webroot /webroot
	ADD webcert /webcert
	ADD nginx/pygma/conf.d /etc/nginx/conf.d
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://127.0.0.1 || exit 1

[nginx:ports]
443/tcp = 0.0.0.0:443
9000/tcp = 0.0.0.0:9000

#[nginx:mounts]
#[nginx:environment]
#[nginx:volumes]


# KEYCLOAK ######################################################################
[keycloak]
hostname = keycloak
hostaddr = 0.0.0.0
hostport = 8080
healthcheck = true

theme = orbrium

registration = false
reset_password = false
email_login = false

session_idle_timeout = 1800
session_max_lifespan = 86400
token_lifespan = 900

[keycloak:build]
image = keycloak:base
script =
	USER keycloak
	ADD truststores /opt/keycloak/conf/truststores
	USER root
	ENV KEYCLOAK_ADMIN={ini['default.system_access_key']}
	ENV KEYCLOAK_ADMIN_PASSWORD={ini['default.system_secret_key']}
	RUN echo "db-username={ini['default.system_access_key']}" >> /opt/keycloak/conf/keycloak.conf
	RUN echo "db-password={ini['default.system_secret_key']}" >> /opt/keycloak/conf/keycloak.conf
	RUN echo "db-url=jdbc:postgresql://{ini['postgresql.hostname']}/keycloak" >> /opt/keycloak/conf/keycloak.conf
	RUN echo "hostname=https://{ini['default.endpoint']}/auth" >> /opt/keycloak/conf/keycloak.conf
	RUN echo "hostname-admin=https://{ini['default.endpoint']}/auth" >> /opt/keycloak/conf/keycloak.conf

#[keycloak:environment]
#[keycloak:ports]
#[keycloak:volumes]
#[keycloak:mounts]


# MINIO #########################################################################
[minio]
hostname = minio
hostaddr = 0.0.0.0
hostport = 9001
healthcheck = true

[minio:build]
image = minio:base
script =
	ENV DATA_STORE_LIST=/data
	ENV MINIO_ROOT_USER={ini['default.system_access_key']}
	ENV MINIO_ROOT_PASSWORD={ini['default.system_secret_key']}
	ENV MINIO_BROWSER_REDIRECT_URL=https://{ini['default.endpoint']}/minio/
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -f http://localhost:9000/minio/health/live || exit 1

[minio:volumes]
minio = /data

#[minio:environment]
#[minio:ports]
#[minio:mounts]


# GUACAMOLE #####################################################################
[guacd]
hostname = guacd
hostaddr = 0.0.0.0
hostport = 4822

[guacd:build]
image = guacd:base
script =

#[guacd:environment]
#[guacd:ports]
#[guacd:volumes]
#[guacd:mounts]

[guacamole]
hostname = guacamole
hostaddr = 0.0.0.0
hostport = 8080

[guacamole:build]
image = guacamole:base
script =
	ENV GUACD_HOSTNAME={ini['guacd.hostname']}
	ENV GUACD_PORT={ini['guacd.hostport']}
	ENV POSTGRESQL_HOSTNAME={ini['postgresql.hostname']}
	ENV POSTGRESQL_PORT={ini['postgresql.hostport']}
	ENV POSTGRESQL_USER={ini['default.system_access_key']}
	ENV POSTGRESQL_PASSWORD={ini['default.system_secret_key']}
	ENV POSTGRESQL_DATABASE=guacamole
	ENV POSTGRESQL_AUTO_CREATE_ACCOUNTS=true
	ENV OPENID_ISSUER=https://{ini['default.endpoint']}/auth/realms/{ini['default.tenant']}
	ENV OPENID_CLIENT_ID=guacamole
	ENV OPENID_USERNAME_CLAIM_TYPE=preferred_username
	ENV OPENID_AUTHORIZATION_ENDPOINT=https://{ini['default.endpoint']}/auth/realms/{ini['default.tenant']}/protocol/openid-connect/auth
	ENV OPENID_JWKS_ENDPOINT=http://{ini['keycloak.hostname']}:{ini['keycloak.hostport']}/auth/realms/{ini['default.tenant']}/protocol/openid-connect/certs
	ENV OPENID_REDIRECT_URI=https://{ini['default.endpoint']}/terminal/index.html
	ENV EXTENSION_PRIORITY=*,openid

#[guacamole:environment]
#[guacamole:ports]
#[guacamole:volumes]
#[guacamole:mounts]


# CONSOLE #######################################################################
[console]
hostname = console
hostaddr = 0.0.0.0
hostport = 22

[console:build]
image = console:base
script =
	RUN echo -n 'root:{ini['default.system_secret_key']}' | chpasswd

#[console:mounts]
#[console:environment]
#[console:ports]
#[console:volumes]


# REDIS #########################################################################
[redis]
hostname = redis
hostaddr = 0.0.0.0
hostport = 6379
healthcheck = true

[redis:session]
database = 0
expire = 300

[redis:pocket]
database = 1

[redis:queue]
database = 2

[redis:model]
database = 3
expire = 3600

[redis:build]
image = redis:base
script =
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD redis-cli --raw incr ping || exit 1

[redis:volumes]
redis = /data

#[redis:environment]
#[redis:ports]
#[redis:mounts]


# ELASTIC SEARCH ################################################################
[elasticsearch]
hostname = elasticsearch
hostaddr = 0.0.0.0
hostport = 9200
healthcheck = true

# shards total == 1000
# shards <= total cluster memory(heap) * 20
shards = 20
replicas = 0
expire = 604800

[elasticsearch:build]
image = elasticsearch:base
script =
	ENV discovery.type=single-node
	ENV SYSTEM_ACCESS_KEY={ini['default.system_access_key']}
	ENV SYSTEM_SECRET_KEY={ini['default.system_secret_key']}
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD curl -k https://localhost:9200 || exit 1

[elasticsearch:volumes]
elasticsearch = /usr/share/elasticsearch

#[elasticsearch:environment]
#[elasticsearch:ports]
#[elasticsearch:mounts]


# POSTGRESQL ####################################################################
[postgresql]
hostname = postgresql
hostaddr = 0.0.0.0
hostport = 5432
healthcheck = true

[postgresql:build]
image = postgresql:base
script =
	ENV DATABASE_USER={ini['default.system_access_key']}
	ENV POSTGRES_PASSWORD={ini['default.system_secret_key']}
	ADD postgresql/pygma /pygma
	RUN echo ". /pygma/init.sh" > /docker-entrypoint-initdb.d/init.sh
	CMD ["-c", "config_file=/pygma/postgresql.conf"]
	HEALTHCHECK \
		--interval={ini['default.health_check_interval']}s \
		--timeout={ini['default.health_check_timeout']}s \
		--retries={ini['default.health_check_retries']} \
		CMD pg_isready --username postgres || exit 1

[postgresql:volumes]
postgresql = /var/lib/postgresql/data

#[postgresql:environment]
#[postgresql:ports]
#[postgresql:mounts]


# OPENLDAP ######################################################################
[ldap]
hostname = {ini['default.endpoint']}
hostaddr = 0.0.0.0
hostport = 636

[ldap:build]
image = ldap:base
script =
	RUN rm -rf /container/service/slapd/assets/certs
	ADD webcert /container/service/slapd/assets/certs
	ADD ldap/pygma/conf.d/custom.ldif /container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif
	ENV LDAP_DOMAIN={ini['default.domain']}
	ENV LDAP_BASE_DN="{','.join(['dc=' + dc for dc in ini['default.domain'].split('.')])}"
	ENV LDAP_ADMIN_PASSWORD={ini['default.system_secret_key']}
	ENV LDAP_CONFIG_PASSWORD={ini['default.system_secret_key']}
	ENV LDAP_TLS_VERIFY_CLIENT=try
	ENV LDAP_TLS_CA_CRT_FILENAME=ca.crt
	ENV LDAP_TLS_CRT_FILENAME=server.crt
	ENV LDAP_TLS_KEY_FILENAME=server.key

[ldap:volumes]
ldap-mdb = /var/lib/ldap
ldap-cnf = /etc/ldap/slapd.d

[ldap:ports]
636/tcp = 0.0.0.0:636

#[ldap:environment]

#[ldap:mounts]

[ldapadm]
hostname = ldapadm
hostaddr = 0.0.0.0
hostport = 443

[ldapadm:build]
image = ldapadm:base
script =
	RUN rm -rf /container/service/ldap-client/assets/certs
	ADD webcert /container/service/ldap-client/assets/certs
	ENV PHPLDAPADMIN_LDAP_HOSTS={ini['ldap.hostname']}
	ENV PHPLDAPADMIN_HTTPS=true
	ENV PHPLDAPADMIN_LDAP_CLIENT_TLS_CA_CRT_FILENAME=ca.crt
	ENV PHPLDAPADMIN_LDAP_CLIENT_TLS_CRT_FILENAME=server.crt
	ENV PHPLDAPADMIN_LDAP_CLIENT_TLS_KEY_FILENAME=server.key

[ldapadm:ports]
443/tcp = 0.0.0.0:8389

#[ldapadm:environment]
#[ldapadm:volumes]
#[ldapadm:mounts]"